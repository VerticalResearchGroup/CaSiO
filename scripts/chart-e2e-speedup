#!/usr/bin/env python
import matplotlib.pyplot as plt
import seaborn as sns
import os
from scipy.spatial.distance import pdist
from scipy.spatial.distance import squareform

import numpy as np
import utils

apps = utils.apps

WIDTH = 1.0

stats = [
    'gpu__time_duration.sum',
    'inst_executed'
]

fig = plt.figure(figsize=(6, 3))
axs = fig.subplots(1, 1)

labels = []

p100 = []
v100 = []
a100 = []

for i, app in enumerate(apps):
    prettyname = utils.app_pretty_names[app]
    labels.append(prettyname)

    throughputs = {
        plat: utils.throughput(plat, app, utils.get_large_batch_size(plat, app))
        for plat in utils.plats
    }

    p100.append(1)
    v100.append(throughputs['v100'] / throughputs['p100'])
    a100.append(throughputs['a100'] / throughputs['p100'])

xs = np.arange(len(apps)) * 4
axs.bar(xs + 0, p100, width=WIDTH, label='P100')
axs.bar(xs + 1, v100, width=WIDTH, label='V100')
axs.bar(xs + 2, a100, width=WIDTH, label='A100')

plt.xticks(xs + 1, labels, rotation=45, ha='right', fontsize=8)
plt.xlim([-WIDTH / 2, max(xs) + 3 - 1.5 * WIDTH])

plt.xlabel('Application')
plt.ylabel('Speedup over P100')
plt.title('Generational Performance Gains')
plt.legend()
plt.tight_layout()
os.makedirs('charts', exist_ok=True)
plt.savefig('charts/e2e-speedup.pdf')
