#!/usr/bin/env python

import os
import sys
import utils


for app in utils.apps:
    print()
    print(f'{app}:')
    traces = {}
    no_data = False
    for plat in utils.plats:
        filename = f'{utils.CASIO}/casio-results/postproc/{plat}/{app}/op-trace-large-batch.csv'

        if not os.path.exists(filename):
            print(f'Missing data for {app}/{plat}')
            no_data = True
            break

        trace = []
        with open(filename) as f:
            for line in f:
                opname, accel_time_str = line.strip().split(',')
                accel_time = float(accel_time_str)
                trace.append(utils.FrameworkOp(
                    utils.normalize_fw_opname(opname),
                    accel_time
                ))

        traces[plat] = trace

    if no_data: continue

    unqiue_op_names = set([
        op.name for op in traces['a100']
    ])

    print(f'    # Unique Ops: {len(unqiue_op_names)}')

    for plat in utils.plats:
        print(f'    {plat}:')
        total_time = sum(op.accel_time for op in traces[plat])

        if total_time == 0:
            print(f'        Total time: 0')
            continue

        contrib = [
            (
                opname,
                sum(op.accel_time for op in traces[plat] if op.name == opname) / total_time
            )
            for opname in unqiue_op_names
        ]

        contrib.sort(key=lambda x: x[1], reverse=True)

        print(f'        Top 5 Contributing Ops by Runtime Fraction:')
        print(f'        ===========================================')
        for opname, frac in contrib[:5]:
            print(f'        {opname.ljust(25)}: {frac*100:.2f}%')



